<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/security/oauth2 
     	http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

    <beans>
        <security:http pattern="/crud/**">
            <security:session-management session-authentication-strategy-ref="fixation"/>
            <security:intercept-url pattern="/**" access="isAuthenticated()" requires-channel="https"/>

            <security:port-mappings>
                <security:port-mapping http="#{configurationService.configuration.getProperty('tomcat.http.port')}"
                              https="#{configurationService.configuration.getProperty('tomcat.ssl.port')}"/>
                <security:port-mapping http="#{configurationService.configuration.getProperty('embeddedserver.http.port')}"
                              https="#{configurationService.configuration.getProperty('embeddedserver.ssl.port')}"/>
            </security:port-mappings>

            <security:custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
            <security:custom-filter ref="hybrisUserFilter" after="LAST"/>
            <security:access-denied-handler ref="oauthAccessDeniedHandler"/>
            <security:http-basic/>

            <security:headers>
                <security:content-type-options/>
                <security:hsts include-subdomains="true" max-age-seconds="16070400"/>
                <security:xss-protection/>
                <security:frame-options disabled="true"/>
            </security:headers>
            <security:csrf disabled="true"/>
        </security:http>

        <security:authentication-manager>
            <security:authentication-provider ref="coreAuthenticationProvider"/>
        </security:authentication-manager>

		<oauth:resource-server id="resourceServerFilter" resource-id="hybris" token-services-ref="oauthTokenServices"
							   entry-point-ref="oauthAuthenticationEntryPoint"/>

		<security:global-method-security pre-post-annotations="enabled" proxy-target-class="true" secured-annotations="enabled">
			<security:expression-handler ref="oauthExpressionHandler"/>
		</security:global-method-security>

		<oauth:expression-handler id="oauthExpressionHandler"/>

        <bean id="coreAuthenticationProvider" class="de.hybris.platform.spring.security.CoreAuthenticationProvider">
            <property name="userDetailsService" ref="coreUserDetailsService"/>
        </bean>

        <bean id="coreUserDetailsService" class="de.hybris.platform.spring.security.CoreUserDetailsService"/>

        <bean id="defaultPersistenceAuthFilter" class="de.hybris.platform.xyformsweb.auth.PersistenceAuthHeaderFilter">
            <property name="headerName"
                      value="#{configurationService.configuration.getProperty('xyformsservices.orbeon.hybris-proxy-header')}"/>
            <property name="headerValue"
                      value="#{configurationService.configuration.getProperty('xyformsservices.orbeon.hybris-proxy-value')}"/>
        </bean>

        <bean id="hybrisUserFilter" class="de.hybris.platform.webservicescommons.oauth2.HybrisOauth2UserFilter"/>

        <bean id="oauthAuthenticationEntryPoint"
              class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
            <property name="realmName" value="hybris"/>
            <property name="exceptionRenderer" ref="oAuth2ExceptionRenderer"/>
        </bean>

        <bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
            <property name="exceptionRenderer" ref="oAuth2ExceptionRenderer"/>
        </bean>

        <bean id="oAuth2ExceptionRenderer"
              class="org.springframework.security.oauth2.provider.error.DefaultOAuth2ExceptionRenderer">
            <property name="messageConverters">
                <list>
                    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
                    <bean class="org.springframework.security.oauth2.http.converter.jaxb.JaxbOAuth2ExceptionMessageConverter"/>
                    <bean class="org.springframework.http.converter.StringHttpMessageConverter" p:writeAcceptCharset="false"/>
                    <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                </list>
            </property>
        </bean>

        <bean id="fixation" class="de.hybris.platform.servicelayer.security.spring.HybrisSessionFixationProtectionStrategy"/>
    </beans>
</beans>
